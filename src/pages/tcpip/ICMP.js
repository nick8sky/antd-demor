import React, { Component } from 'react';

class ICMP extends Component {
    render() {
        return (
            <div>
                <h2>网络控制报文协议 ICMP</h2>
                <p>ICMP(internet control message protocol)是internet控制报文协议。是TCP/IP协议族里的一个子协议，用于在IP主机、路由器之间传递控制信息。</p>
                <p>控制信息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。</p>
                <p>ICMP协议大致分为两类，一种是查询报文，一种是差错报文。查询报文由发送者发出，差错报文是由出错的主机返回发给源数据包的发送者。</p>
                <p>PING可以说是ICMP的最著名的应用，系统自带工具当某一个网站上不去的时候。通常会ping一下这个网站，ping会回显一些有用的信息。 </p>
                <p>ICMP 报文格式：</p>
                <p><img src={require('../../img/WX20180220-145426@2x.png')} style={{height:"45%",width:"45%"}}/></p>
                <p><strong>ICMP（网络控制报文协议）分为：差错报告报文和查询报文</strong></p>
                <p>（1）<strong>差错报告报文：</strong></p>
                <p>ICMP不能纠错，只能检查错误，发现错误报告给最初的数据源。其数据部分包含两部分：初始IP首部和数据报前8字节（TCP或udp 前8字节包含源端口和目的端口）</p>
                <p>1）终点不可达：类型=3，代码0~15，首部，由路由器或者目的主机检查后发送差错报告给初始源数据。即时没有终点不可达差错报文也不能代表数据报交付成功。</p>
                <p>2）源点抑制：类型=4，缺乏流量控制和拥塞控制。当路由器或主机丢弃数据报时，向源数据端口发送源点抑制差错报文。该报文两个作用：第一通知源点数据报已经丢弃，二通知源点慢点发数据。</p>
                <p>A.路由器或主机每丢弃一个数据报就要向源点发送一个报告；b.这里源点无从得知什么时候拥塞解除，只能一直减速慢发数据，当没有收到ICMP差错报文开始认为拥塞解除；c.一对一时源点抑制能够对拥塞产生良好效果，但多对一时不一定，因为多个数据源，路由器丢弃的数据报不一定是发送快的那个，有可能是发送慢的，路由器不知道哪个数据源产生拥塞。</p>
                <p>3）超时：类型=11，解决多个路由表中出现环路现象。每个数据报通过一个路由器生存时间就-1，当生存时间为0时，就向源点发送一个超时差错报告报文。如果报文的一个分片超时也发送差错报告报文。</p>
                <p>4）参数问题：类型=12，参数具有二义性，路由器或主机都可差错报告</p>
                <p>5）改变路由：5，数据源主机刚开始时，只保留一张很小的路由表，可能这上面的信息并不是最优路径，如果后续更新路径后要发送报告给数据源。</p>
                <p>6）注意不产生ICMP数据报：a.对于已携带ICMP差错报文的数据报，B.对于分片的数据报，如果不是第一片C.具有多播地址的数据报 D.具有特殊地址的（127.0.0.0）数据报</p>
                <p>（2）<strong>查询报文</strong></p>
                <p>1）回送请求与回答：类型8或0</p>
                <p>回送请求与回答可以判定两个主机之间是否可达，通常可以通过ping命令来实现</p>
                <p>2）时间戳请求与回答：</p>
                <p>确定IP数据报在这两个机器之间来回所需的往返时间。</p>
                <p>更多错误类型...百度</p>


            </div>
        );
    }
}

export default ICMP;